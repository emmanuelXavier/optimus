/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package optimus.core.servlet;

import java.io.*;
import java.net.*;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.servlet.*;
import javax.servlet.http.*;

/**
 *
 * @author Analista Sênior
 */
public class TCPaginacao extends HttpServlet {

    private String link;
    private String parametro;
    private float numRegistros;
    private float registrosPorPagina;
    private int registroAtual;
    private String event;
    private String classe;

    public void construtora(String link, String parametro, int numRegistros, int registrosPorPagina, int registroAtual, String event, String classe) {
        this.link = link;
        this.event = event;
        this.classe = classe;
        this.parametro = parametro;
        this.numRegistros = numRegistros;
        this.registrosPorPagina = registrosPorPagina;
        this.registroAtual = registroAtual;

    }

    public void paginacao(HttpServletRequest request, HttpServletResponse response) {
        try {

            response.setContentType("text/html");
            PrintWriter out = null;



            out = response.getWriter();


            out.print("<table  border = \"0\" cellpadding = \"0\" cellspacing = \"0\" width = \"100%\" bgcolor = \"white\" height = \"0\" > " +
                    "<tr><td height = \"25\" valign = \"top\" bgcolor = \"#EFEFEF\" style = \"border-width:1; border-color:rgb(223,223,223); border-style:solid;\" > " +
                    "<table align = \"center\" border = \"0\" cellpadding = \"0\" cellspacing = \"8\" height = \"25\" style = \"border-top-color:rgb(0,0,0); border-right-color:rgb(0,0,0); border-bottom-color:rgb(0,0,0);\" >" +
                    "<tr><td width = \"91\" style = \"border-width:0; border-top-color:rgb(42,57,60); border-top-style:solid;\" height = \"18\" > <p align = \"center\" >" +
                    "<font size = \"1\" color = \"#333333\" > <b> &nbsp;</b></font><font face=\"Verdana\" size = \"1\" color = \"#333333\" > <b>");

            if (this.registroAtual == 0) {
                this.registroAtual = 1;            //se a pagina for apos a primeira mostra-se a opcao anterior
            }
            if (this.registroAtual > 1) {
                out.print("<a href=" + this.link + "?registroAtual=" + (this.registroAtual - 1) + "&parametro=" + this.parametro + "&numRegistros=" + this.numRegistros + "&registrosPorPagina=" + this.registrosPorPagina + "&event=" + this.event + "&classe=" + this.classe +">" +
                        "<font color=#828A91>Anterior</font></a>");
            }

            out.printf("</b></font></p></td><td width=\"387\" style=\"border-width:0; border-top-color:rgb(42,57,60); border-top-style:solid;\" height=\"18\" valign=\"middle\"><p align=\"center\" style=\"margin-top:0; margin-bottom:0;\"><font color=\"#333333\" size=\"1\" face=\"Verdana\"><b>");

            //encontrando o numero de paginas da paginacao
            float pag = (this.numRegistros / this.registrosPorPagina);
            pag =  (float) Math.ceil(pag);
            //se a pagina atual for menor que cinco, usa-se a pagina 5 como referencia para mostrar somente 10 paginas por vez
            int paginaReferencia = 0;
            if (this.registroAtual <= 5) {
                paginaReferencia = 5;
            } //se for maior usa a propria como referencia
            else {
                paginaReferencia = this.registroAtual;
            }

            //escrevendo as paginas
            int contador = 1;
            for (int i = paginaReferencia - 4; i <= pag; i++) {
                if (contador >= 10) {
                    break;
                }
                if (this.registroAtual != i) {
                    out.print("<a href=" + this.link + "?registroAtual=" + i + "&parametro=" + this.parametro + "&numRegistros=" + this.numRegistros + "&registrosPorPagina=" + this.registrosPorPagina + "&registroAtual=" + this.registroAtual + "&event=" + this.event + "&classe=" + this.classe +"><font color=#828A91><span style=\"border-width:1; border-color:gray; border-style:solid;\">&nbsp;&nbsp;" + i + "&nbsp;&nbsp;</span></font></a>&nbsp;");
                } else {
                    out.print("<a href=" + this.link + "?registroAtual=" + i + "&parametro=" + this.parametro + "&numRegistros=" + this.numRegistros + "&registrosPorPagina=" + this.registrosPorPagina + "&registroAtual=" + this.registroAtual + "&event=" + this.event + "&classe=" + this.classe +"><font color=white><span style=\"background-color:rgb(255,153,0);border-width:1; border-color:rgb(255,153,0); border-style:solid;\">&nbsp;&nbsp;"+ i +"&nbsp;&nbsp;</span></font></a>&nbsp;");

                }
                
                contador++;
            }
            
            
            out.print("</b></font></p></td><td width=\"84\" style=\"border-width:0; border-top-color:rgb(42,57,60); border-top-style:solid;\" height=\"18\">" +
                     "<p align=\"center\"><font face=\"Verdana\" size=\"1\" color=\"#333333\"><b>");
            
            //se houver ainda pagina a frente mostra a opcao proxima
            if (pag > this.registroAtual){
               if (this.registroAtual == 0) this.registroAtual = 1;
               
               out.print("<a href=" + this.link + "?registroAtual=" + (this.registroAtual + 1) + "&parametro=" + this.parametro + "&numRegistros=" +this.numRegistros + "&registrosPorPagina=" + this.registrosPorPagina + "&registroAtual=" + this.registroAtual + "&event=" + this.event + "&classe=" + this.classe + "><font color=#828A91>Próxima</font></a>");
            
            }
            
            out.print("</b></font> </td></tr></table></td></tr></table>");

        } catch (IOException ex) {
            Logger.getLogger(TCPaginacao.class.getName()).log(Level.SEVERE, null, ex);
        }




    }

    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        //System.out.printf("entrei na paginacao");
        //this.construtora(request, response);
        //this.paginacao(request, response);


    }

    /** 
     * Handles the HTTP <code>POST</code> method.
     * @param request servlet request
     * @param response servlet response
     */
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
    }

    /** 
     * Returns a short description of the servlet.
     */
    public String getServletInfo() {
        return "Short description";
    }
    // </editor-fold>
}
